generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  category_id       Int             @id @default(autoincrement())
  category          String?         @db.VarChar(45)
  category_location Int
  products          products[]
  subcategories     subcategories[]
}

model clothing_size {
  clothing_size_id Int     @id @default(autoincrement())
  clothing_size    String? @db.VarChar(45)
}

model products {
  product_id       Int            @id @default(autoincrement())
  product_name     String         @db.VarChar(45)
  category_id      Int
  clothing_size_id Int?
  in_stock         String?        @db.VarChar(45)
  subcategory_id   Int?
  image_id         String?        @db.VarChar(500)
  price            Float?         @db.Float
  order_form_cell  String         @db.VarChar(45)
  featured_product Int            @default(0)
  category         category       @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_category")
  subcategories    subcategories? @relation(fields: [subcategory_id], references: [subcategory_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_subcategory")

  @@index([category_id], map: "fk_product_category_idx")
  @@index([subcategory_id], map: "fk_product_subcategory_idx")
}

model subcategories {
  subcategory_id   Int        @id @default(autoincrement())
  subcategory_name String     @db.VarChar(135)
  catg_id          Int
  products         products[]
  category         category   @relation(fields: [catg_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "category_id_connection")

  @@index([catg_id], map: "category_id_connection_idx")
}

model clothing_product_size {
  size_id                  Int    @id @default(autoincrement())
  clothing_product_id      Int
  category_id              Int
  size                     String @db.VarChar(45)
  clothing_order_form_cell String @db.VarChar(45)
  price                    Int
}

model stores {
  store_id     Int     @id @default(autoincrement())
  user_id      String? @db.VarChar(45)
  store_name   String  @db.VarChar(45)
  store_street String  @db.VarChar(45)
  store_city   String  @db.VarChar(45)
  store_state  String  @db.VarChar(45)
  store_zip    String  @db.VarChar(5)
}

model delivery_date {
  delivery_id Int    @id
  month       String @db.VarChar(45)
  number      Int
  year        Int
}
